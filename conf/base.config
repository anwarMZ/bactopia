process {
    // Defaults
    container     = "quay.io/bactopia/bactopia:${manifest.version}"
    errorStrategy = 'retry'
    maxRetries    = params.max_retry

    // Resources
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    time   = { check_max( 1.h  * task.attempt, 'time'   ) }

    publishDir = [
        path: params.outdir,
        mode: params.publish_dir_mode,
        overwrite: params.force,
        saveAs: { filename -> 
            saveFiles(filename:filename, opts:options, prefix:prefix, run_name:params.run_name, wf:params.wf, rundir:rundir) 
        }
    ]

    // Modules imported from nf-core
    withLabel: process_single {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 2.h  * task.attempt, 'time'    ) }
    }
    withLabel: process_low {
        cpus   = { check_max( 4     * task.attempt, 'cpus'   ) }
        memory = { check_max( 8.GB  * task.attempt, 'memory' ) }
        time   = { check_max( 4.h   * task.attempt, 'time'   ) }
    }
    withLabel: process_medium {
        cpus   = { check_max( 8     * task.attempt, 'cpus'   ) }
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time   = { check_max( 12.h  * task.attempt, 'time'   ) }
    }
    withLabel: process_high {
        cpus   = { check_max( 12    * task.attempt, 'cpus'   ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time   = { check_max( 24.h  * task.attempt, 'time'   ) }
    }
    withLabel: process_long {
        time   = { check_max( 96.h  * task.attempt, 'time'   ) }
    }
    withLabel: process_high_memory {
        memory = { check_max( 128.GB * task.attempt, 'memory' ) }
    }
    withLabel: error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel: error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}
