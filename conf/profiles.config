profiles {
    standard {
        conda.enabled = true
        conda.createOptions = "-c conda-forge -c bioconda"
        conda.useMamba = params.use_mamba
        conda.cacheDir = "${params.condadir}"
        params.enable_conda = true
    }

    aws {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        process.container = "quay.io/bactopia/bactopia:${manifest.version}"
        includeConfig "profiles/aws.config"
    }

    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g) -v ${HOME}/.cache:/.cache -v ${HOME}/.config:/.config -v ${PWD}:/.medaka'
    }

    arm {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64 -v ${HOME}/.cache:/.cache -v ${HOME}/.config:/.config'
    }

    gcp {
        includeConfig "profiles/gcp.config"
    }

    sge {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "${singularity_cache}"
        includeConfig "profiles/sge.config"
    }

    apptainer {
        apptainer.enabled = true
        apptainer.autoMounts = true
        apptainer.cacheDir = "${singularity_cache}"
        apptainer.runOptions = "${params.container_opts}"
    }

    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "${singularity_cache}"
        singularity.runOptions = "${params.container_opts}"
    }

    slurm {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "${singularity_cache}"
        includeConfig "profiles/slurm.config"
    }

    test { 
        includeConfig 'profiles/test.config'
    }

    /*
    Custom User Configs.
    */
    arcc_hawk {
        includeConfig "profiles/arcc_hawk.config"
    }
}
